name: "Security Gate"

on:
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened]

jobs:
  security-gate:
    name: Security Gate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Check Code Scanning Alerts
      id: check-alerts
      uses: advanced-security/codeql-action-sync-alert@v2
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.event.pull_request.head.ref }}
        state: open
        severity: critical,high
        
    - name: Block PR on vulnerability
      if: steps.check-alerts.outputs.has_alerts == 'true'
      run: |
        echo "Critical or High severity security alerts found in this PR. Please address these issues before merging."
        exit 1
        
    - name: Comment on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const alerts = ${{ steps.check-alerts.outputs.alerts }};
          let comment = '';
          
          if (alerts && alerts.length > 0) {
            comment = '⚠️ **Security Issues Detected** ⚠️\n\n' +
                      'The following security issues were found in this PR:\n\n';
            
            alerts.forEach(alert => {
              comment += `- **${alert.rule.severity}**: ${alert.rule.description}\n` +
                        `  Location: ${alert.location.path}:${alert.location.start_line}\n` +
                        `  [More details](${alert.html_url})\n\n`;
            });
            
            comment += 'Please address these issues before merging this PR.';
          } else {
            comment = '✅ **Security Check Passed** ✅\n\n' +
                      'No critical or high severity security issues were found in this PR.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 